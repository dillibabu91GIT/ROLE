
[defaults]
host_key_checking=False
deprecation_warnings=False
ansible_ssh_common_args='-o StrictHostKeyChecking=no'
ansible_ssh_extra_args='-o StrictHostKeyChecking=no'
remote_tmp=/tmp
roles_path=roles/
comment_warnings=False
command_warnings=False
interpreter_python=auto
ANSIBLE_DEPRECATION_WARNINGS=False
ANSIBLE_COMMAND_WARNINGS=False

---
oracle_host: "10.15.25.168:5300"
github_token: "{{ lookup('env', 'TOKEN_GITHUB') }}"
username: "{{ lookup('env', 'ORA_USERNAME') }}"
password: "{{ lookup('env', 'ORA_PASSWORD') }}"
ORACLE_SID: "CNVDGUAT"
zip_file_name: "/ansible/UAT_ARTIFACTS/UAT4/{{ lookup('env', 'COMPILE_DATE') }}/RAK_IB_CONVERGENCE_PATCHES_CR_UAT4/DB_SQL"
zip_file_name_1: "{{ zip_file_url_1 | basename }}"
ORACLE_HOME: "/oracle19c/app/oracle/product/19.3.0/db_home"
PATH: "{{ ORACLE_HOME }}/bin:{{ PATH }}"
oracle_deployment_dir: "/backup"
...
[all:vars]
ansible_user=itdevtra
ansible_ssh_port=22

[oracle_servers]
10.15.25.168
name: Deploy Database

on:
  workflow_dispatch:
   inputs:
      compile_date:
        description: 'Compile date to deploy'
        required: true 
        type: string

jobs:
  deploy:
    runs-on: 
      group: rakbank-self-hosted-runner
      labels: dehitdevtra1
    environment: UAT

    steps: 
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Ansible Playbook
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          ORA_USERNAME: ${{ secrets.ORA_USERNAME }}
          ORA_PASSWORD: ${{ secrets.ORA_PASSWORD }}
          COMPILE_DATE: ${{ github.event.inputs.compile_date }}
        run: |
          cd ${{ github.workspace }}
          ansible-playbook -vvv -b -i inventory.ini ./playbook/mcfdbdeployment.yml --extra-vars "target=oracle_servers destination=${{ github.workspace }}"

----------------
 rakbank-internal/mcf_db/.github/workflows/main.yml@refs/heads/RELEASE-DB-ROLE
- name: Copy SQL files to Target Server
  copy:
    src: "{{ zip_file_name }}/DEPLOY.sql"
    dest: "{{ oracle_deployment_dir }}/DEPLOY.sql"
    
- name: Deploy Database with custom timeout
  become: true
  become_user: itdevtra
  shell: |
    export ORACLE_HOME=/oracle19c/app/oracle/product/19.3.0/db_home
    export PATH=$ORACLE_HOME/bin:$PATH
    sqlplus -s {{ username }}/{{ password }}@{{ oracle_host }}/{{ ORACLE_SID }} @{{ oracle_deployment_dir }}/DEPLOY.sql | tee /tmp/deploy_output.log
    grep -q 'ORA-' /tmp/deploy_output.log && exit 1 || exit 0
  async: 60
  poll: 0
  register: deploy_result

- name: Wait for the deploy task to finish
  async_status:
    jid: "{{ deploy_result.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 60
  delay: 1
----------------


- name: Get list of .war files in the GitHub repository
  uri:
    url: "https://api.github.com/repos/{{ owner }}/{{ repo }}/contents?ref={{ branch }}"
    method: GET
    headers:
      Authorization: "token {{ github_token }}"
  register: github_response

- name: Download .war files from GitHub repository
  get_url:
    url: "{{ item.download_url }}"
    dest: "/tmp/{{ item.name }}"
    headers:
      Authorization: "token {{ github_token }}"
  loop: "{{ github_response.json | selectattr('name', 'match', '.*\\.war$') | list }}"

- name: Copy .war files to JBoss deployment directory
  ansible.builtin.copy:
    src: "/tmp/{{ item.name }}"
    dest: "/opt/wildfly/standalone/deployments/"
    owner: "wildfly"
    group: "wildfly"
    mode: '0777'
    remote_src: yes  # Copy from Ansible controller
  loop: "{{ github_response.json | selectattr('name', 'match', '.*\\.war$') | list }}"

- name: Reload JBoss to deploy changes
  ansible.builtin.shell:
    cmd: "sh /opt/wildfly/bin/jboss-cli.sh --connect command=:reload"

